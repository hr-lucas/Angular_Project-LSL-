import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { cpf } from './cpf/validator';
import { CPFValidator } from './cpf/directive';
import { CPFPipe } from './cpf/pipe';
import { cnpj } from './cnpj/validator';
import { CNPJValidator } from './cnpj/directive';
import { CNPJPipe } from './cnpj/pipe';
import { telefone } from './telefone/validator';
import { TelefoneValidator } from './telefone/directive';
import { TelefonePipe } from './telefone/pipe';
import { celular } from './celular/validator';
import { CelularValidator } from './celular/directive';
import { CelularPipe } from './celular/pipe';
import { inscricaoestadual } from './inscricaoestadual/validator';
import { InscricaoEstadualValidator } from './inscricaoestadual/directive';
import { InscricaoEstadualPipe } from './inscricaoestadual/pipe';
import { CEPValidator } from './cep/directive';
import { CEPPipe } from './cep/pipe';
import { cep } from './cep/validator';
import { currency } from './currency/validator';
import { CURRENCYValidator } from './currency/directive';
import { CURRENCYPipe } from './currency/pipe';
import { number } from './number/validator';
import { NUMBERValidator } from './number/directive';
import { NUMBERPipe } from './number/pipe';
import { placa } from './placa/validator';
import { PLACAValidator } from './placa/directive';
import { PLACAPipe } from './placa/pipe';
import { percentage } from './percentage/validator';
import { PERCENTAGEValidator } from './percentage/directive';
import { PERCENTAGEPipe } from './percentage/pipe';
import { renavam } from './renavam/validator';
import { RenavamValidator } from './renavam/directive';
import { RenavamPipe } from './renavam/pipe';
import { pispasep } from './pispasep/validator';
import { PispasepValidator } from './pispasep/directive';
import { PispasepPipe } from './pispasep/pipe';
import { rg } from './rg/validator';
import { RGValidator } from './rg/directive';
import { RGPipe } from './rg/pipe';
import { time } from './time/validator';
import { TIMEValidator } from './time/directive';
import { TIMEPipe } from './time/pipe';
import { titulo } from './titulo/validator';
import { TITULOValidator } from './titulo/directive';
import { TITULOPipe } from './titulo/pipe';
import { utilsBr } from 'js-brasil';
import { TextMaskModule } from './angular2TextMask';
export var TextMask = {
    TextMaskModule: TextMaskModule
};
export var NgBrazilValidators = {
    cpf: cpf,
    cnpj: cnpj,
    celular: celular,
    cep: cep,
    currency: currency,
    inscricaoestadual: inscricaoestadual,
    number: number,
    pispasep: pispasep,
    placa: placa,
    percentage: percentage,
    renavam: renavam,
    rg: rg,
    telefone: telefone,
    time: time,
    titulo: titulo
};
export var MASKS = utilsBr.MASKS;
export var CustomDirectives = [
    CelularValidator,
    CelularPipe,
    CEPValidator,
    CEPPipe,
    CPFValidator,
    CPFPipe,
    CNPJValidator,
    CNPJPipe,
    CURRENCYValidator,
    CURRENCYPipe,
    InscricaoEstadualValidator,
    InscricaoEstadualPipe,
    NUMBERValidator,
    NUMBERPipe,
    PERCENTAGEValidator,
    PERCENTAGEPipe,
    PispasepValidator,
    PispasepPipe,
    PLACAValidator,
    PLACAPipe,
    RenavamValidator,
    RenavamPipe,
    RGValidator,
    RGPipe,
    TelefoneValidator,
    TelefonePipe,
    TIMEValidator,
    TIMEPipe,
    TITULOValidator,
    TITULOPipe
];
export var NgBrDirectives = {
    CelularValidator: CelularValidator,
    CelularPipe: CelularPipe,
    CEPValidator: CEPValidator,
    CEPPipe: CEPPipe,
    CNPJValidator: CNPJValidator,
    CNPJPipe: CNPJPipe,
    CPFValidator: CPFValidator,
    CPFPipe: CPFPipe,
    CURRENCYValidator: CURRENCYValidator,
    CURRENCYPipe: CURRENCYPipe,
    InscricaoEstadualValidator: InscricaoEstadualValidator,
    InscricaoEstadualPipe: InscricaoEstadualPipe,
    NUMBERValidator: NUMBERValidator,
    NUMBERPipe: NUMBERPipe,
    PERCENTAGEValidator: PERCENTAGEValidator,
    PERCENTAGEPipe: PERCENTAGEPipe,
    PispasepValidator: PispasepValidator,
    PispasepPipe: PispasepPipe,
    PLACAValidator: PLACAValidator,
    PLACAPipe: PLACAPipe,
    RGValidator: RGValidator,
    RGPipe: RGPipe,
    RenavamValidator: RenavamValidator,
    RenavamPipe: RenavamPipe,
    TelefoneValidator: TelefoneValidator,
    TelefonePipe: TelefonePipe,
    TIMEValidator: TIMEValidator,
    TIMEPipe: TIMEPipe,
    TITULOValidator: TITULOValidator,
    TITULOPipe: TITULOPipe
};
var NgBrazil = /** @class */ (function () {
    function NgBrazil() {
    }
    NgBrazil_1 = NgBrazil;
    NgBrazil.forRoot = function () {
        return {
            ngModule: NgBrazil_1
        };
    };
    var NgBrazil_1;
    NgBrazil = NgBrazil_1 = __decorate([
        NgModule({
            imports: [],
            declarations: [
                CustomDirectives
            ],
            exports: [
                CustomDirectives
            ]
        })
    ], NgBrazil);
    return NgBrazil;
}());
export { NgBrazil };
//# sourceMappingURL=data:application/json;base64,