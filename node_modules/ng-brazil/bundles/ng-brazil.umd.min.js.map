{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng-brazil/cpf/validator.ts","ng://ng-brazil/cpf/directive.ts","ng://ng-brazil/cpf/pipe.ts","ng://ng-brazil/cnpj/validator.ts","ng://ng-brazil/cnpj/directive.ts","ng://ng-brazil/cnpj/pipe.ts","ng://ng-brazil/telefone/validator.ts","ng://ng-brazil/telefone/directive.ts","ng://ng-brazil/telefone/pipe.ts","ng://ng-brazil/celular/validator.ts","ng://ng-brazil/celular/directive.ts","ng://ng-brazil/celular/pipe.ts","ng://ng-brazil/inscricaoestadual/validator.ts","ng://ng-brazil/inscricaoestadual/directive.ts","ng://ng-brazil/inscricaoestadual/pipe.ts","ng://ng-brazil/cep/validator.ts","ng://ng-brazil/cep/directive.ts","ng://ng-brazil/cep/pipe.ts","ng://ng-brazil/currency/validator.ts","ng://ng-brazil/currency/directive.ts","ng://ng-brazil/currency/pipe.ts","ng://ng-brazil/number/validator.ts","ng://ng-brazil/number/directive.ts","ng://ng-brazil/number/pipe.ts","ng://ng-brazil/placa/validator.ts","ng://ng-brazil/placa/directive.ts","ng://ng-brazil/placa/pipe.ts","ng://ng-brazil/percentage/validator.ts","ng://ng-brazil/percentage/directive.ts","ng://ng-brazil/percentage/pipe.ts","ng://ng-brazil/renavam/validator.ts","ng://ng-brazil/renavam/directive.ts","ng://ng-brazil/renavam/pipe.ts","ng://ng-brazil/pispasep/validator.ts","ng://ng-brazil/pispasep/directive.ts","ng://ng-brazil/pispasep/pipe.ts","ng://ng-brazil/rg/validator.ts","ng://ng-brazil/rg/directive.ts","ng://ng-brazil/rg/pipe.ts","ng://ng-brazil/time/validator.ts","ng://ng-brazil/time/directive.ts","ng://ng-brazil/time/pipe.ts","ng://ng-brazil/titulo/validator.ts","ng://ng-brazil/titulo/directive.ts","ng://ng-brazil/titulo/pipe.ts","ng://ng-brazil/angular2TextMask.ts","ng://ng-brazil/lib.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","cpf","control","utilsBr","isPresent","Validators","required","v","value","validateBr","CPF_VALIDATOR","provide","NG_VALIDATORS","useExisting","forwardRef","CPFValidator","multi","prototype","validate","Directive","selector","providers","CPFPipe","transform","cpfValue","maskBr","Pipe","name","cnpj","CNPJ_VALIDATOR","CNPJValidator","CNPJPipe","cnpjValue","telefone","TELEFONE_VALIDATOR","TelefoneValidator","TelefonePipe","telefoneValue","celular","CELULAR_VALIDATOR","CelularValidator","CelularPipe","celularValue","inscricaoestadual","estado","INSCRICAOESTADUAL_VALIDATOR","InscricaoEstadualValidator","InscricaoEstadualPipe","inscricaoestadualValue","cep","CEP_VALIDATOR","CEPValidator","CEPPipe","cepValue","currency","CURRENCY_VALIDATOR","CURRENCYValidator","CURRENCYPipe","currencyValue","number","NUMBER_VALIDATOR","NUMBERValidator","NUMBERPipe","numberValue","placa","PLACA_VALIDATOR","PLACAValidator","PLACAPipe","placaValue","percentage","porcentagem","PERCENTAGE_VALIDATOR","PERCENTAGEValidator","PERCENTAGEPipe","percentageValue","renavam","RENAVAM_VALIDATOR","RenavamValidator","RenavamPipe","renavamValue","pispasep","PISPASE_VALIDATOR","PispasepValidator","PispasepPipe","pispasepValue","rg","RG_VALIDATOR","RGValidator","RGPipe","rgValue","time","TIME_VALIDATOR","TIMEValidator","TIMEPipe","timeValue","titulo","TITULO_VALIDATOR","TITULOValidator","TITULOPipe","tituloValue","MASKEDINPUT_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","MaskedInputDirective","rendererFactory","_elementRef","_compositionMode","userAgent","this","textMaskConfig","mask","guide","placeholderChar","pipe","undefined","keepCharPositions","onChange","_","onTouched","_composing","_renderer","createRenderer","getDOM","getUserAgent","test","toLowerCase","ngOnChanges","changes","_setupMask","textMaskInputElement","update","inputElement","writeValue","normalizedValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","nativeElement","_handleInput","create","tagName","toUpperCase","getElementsByTagName","createTextMaskInputElement","assign","_compositionStart","_compositionEnd","RendererFactory2","ElementRef","Optional","type","Inject","args","COMPOSITION_BUFFER_MODE","Input","Injectable","host","(input)","(blur)","(compositionstart)","(compositionend)","exportAs","TextMaskModule","NgModule","imports","BrowserModule","declarations","exports","TextMask","NgBrazilValidators","MASKS","CustomDirectives","NgBrDirectives","NgBrazil","forRoot","ngModule","NgBrazil_1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const cpf: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.cpf(v) ? null : {cpf: true};\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\nimport { cpf } from './validator';\r\n\r\nconst CPF_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => CPFValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[cpf][formControlName],[cpf][formControl],[cpf][ngModel]',\r\n  providers: [CPF_VALIDATOR]\r\n})\r\nexport class CPFValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return cpf(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'cpf',\r\n})\r\nexport class CPFPipe implements PipeTransform {\r\n    transform(cpfValue: any) {\r\n      return maskBr.cpf(cpfValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const cnpj: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.cnpj(v) ? null : {cnpj: true};\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { cnpj } from './validator';\r\n\r\n\r\nconst CNPJ_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => CNPJValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[cnpj][formControlName],[cnpj][formControl],[cnpj][ngModel]',\r\n  providers: [CNPJ_VALIDATOR]\r\n})\r\nexport class CNPJValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return cnpj(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'cnpj',\r\n})\r\nexport class CNPJPipe implements PipeTransform {\r\n    transform(cnpjValue: any) {\r\n      return maskBr.cnpj(cnpjValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const telefone: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.telefone(v) ? null : { telefone: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { telefone } from './validator';\r\n\r\nconst TELEFONE_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => TelefoneValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[telefone][formControlName],[telefone][formControl],[telefone][ngModel]',\r\n  providers: [TELEFONE_VALIDATOR]\r\n})\r\nexport class TelefoneValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return telefone(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'telefone',\r\n})\r\nexport class TelefonePipe implements PipeTransform {\r\n    transform(telefoneValue: any) {\r\n        return maskBr.telefone(telefoneValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const celular: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.celular(v) ? null : { celular: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { celular } from './validator';\r\n\r\nconst CELULAR_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => CelularValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[celular][formControlName],[celular][formControl],[celular][ngModel]',\r\n  providers: [CELULAR_VALIDATOR]\r\n})\r\nexport class CelularValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return celular(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'celular',\r\n})\r\nexport class CelularPipe implements PipeTransform {\r\n    transform(celularValue: any) {\r\n        return maskBr.celular(celularValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const inscricaoestadual = (estado: string):\r\n  ValidatorFn => {\r\n    return (control: AbstractControl): { [key: string]: boolean } => {\r\n      if (utilsBr.isPresent(Validators.required(control))) {\r\n        return null;\r\n      }\r\n      const v: string = control.value;\r\n      return validateBr.inscricaoestadual(v, estado) ? null : { inscricaoestadual: true };\r\n    };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { inscricaoestadual } from './validator';\r\n\r\n\r\nconst INSCRICAOESTADUAL_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => InscricaoEstadualValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[inscricaoestadual][formControlName],[inscricaoestadual][formControl],[inscricaoestadual][ngModel]',\r\n  providers: [INSCRICAOESTADUAL_VALIDATOR]\r\n})\r\nexport class InscricaoEstadualValidator implements Validator {\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    return inscricaoestadual('mg')(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n  name: 'inscricaoestadual',\r\n})\r\nexport class InscricaoEstadualPipe implements PipeTransform {\r\n  transform(inscricaoestadualValue: any, estado: any) {\r\n    return maskBr.inscricaoestadual(inscricaoestadualValue, estado);\r\n  }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const cep: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.cep(v) ? null : { cep: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { cep } from './validator';\r\n\r\nconst CEP_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => CEPValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[cep][formControlName],[cep][formControl],[cep][ngModel]',\r\n  providers: [CEP_VALIDATOR]\r\n})\r\nexport class CEPValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return cep(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'cep',\r\n})\r\nexport class CEPPipe implements PipeTransform {\r\n    transform(cepValue: any) {\r\n        return maskBr.cep(cepValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const currency: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.currency(v) ? null : { currency: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { currency } from './validator';\r\n\r\nconst CURRENCY_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => CURRENCYValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[currency][formControlName],[currency][formControl],[currency][ngModel]',\r\n  providers: [CURRENCY_VALIDATOR]\r\n})\r\nexport class CURRENCYValidator implements Validator {\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    return currency(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n  name: 'currencyBrazil',\r\n})\r\nexport class CURRENCYPipe implements PipeTransform {\r\n  transform(currencyValue: any) {\r\n    return maskBr.currency(currencyValue);\r\n  }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const number: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.number(v) ? null : { number: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { number } from './validator';\r\n\r\nconst NUMBER_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => NUMBERValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[number][formControlName],[number][formControl],[number][ngModel]',\r\n  providers: [NUMBER_VALIDATOR]\r\n})\r\nexport class NUMBERValidator implements Validator {\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    return number(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n  name: 'numberBrazil',\r\n})\r\nexport class NUMBERPipe implements PipeTransform {\r\n  transform(numberValue: any) {\r\n    return maskBr.number(numberValue);\r\n  }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn, RequiredValidator } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const placa: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\r\n    if (utilsBr.isPresent(Validators.required(control))) {\r\n        return null;\r\n    }\r\n\r\n    const v: string = control.value;\r\n    return validateBr.placa(v) ? null : {placa: true};\r\n}\r\n","import { Directive, forwardRef} from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\nimport { placa } from './validator';\r\n\r\nconst PLACA_VALIDATOR: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => PLACAValidator),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    // tslint:disable-next-line:directive-selector\r\n    selector: '[placa][formControlName],[placa][formControl],[placa][ngModel]',\r\n    providers: [PLACA_VALIDATOR]\r\n})\r\nexport class PLACAValidator implements Validator {\r\n    validate(c: AbstractControl): {[key: string]: any} {\r\n        return placa(c);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n  name: 'placa'\r\n})\r\nexport class PLACAPipe implements PipeTransform {\r\n  transform(placaValue: any) {\r\n    return maskBr.placa(placaValue);\r\n  }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const percentage: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.porcentagem(v) ? null : { percentage: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { percentage } from './validator';\r\n\r\nconst PERCENTAGE_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => PERCENTAGEValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[percentage][formControlName],[percentage][formControl],[percentage][ngModel]',\r\n  providers: [PERCENTAGE_VALIDATOR]\r\n})\r\nexport class PERCENTAGEValidator implements Validator {\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    return percentage(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n  name: 'percentage',\r\n})\r\nexport class PERCENTAGEPipe implements PipeTransform {\r\n  transform(percentageValue: any) {\r\n    return maskBr.porcentagem(percentageValue);\r\n  }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const renavam: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.renavam(v) ? null : { renavam: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { renavam } from './validator';\r\n\r\nconst RENAVAM_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => RenavamValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[renavam][formControlName],[renavam][formControl],[renavam][ngModel]',\r\n  providers: [RENAVAM_VALIDATOR]\r\n})\r\nexport class RenavamValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return renavam(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'renavam',\r\n})\r\nexport class RenavamPipe implements PipeTransform {\r\n    transform(renavamValue: any) {\r\n        return maskBr.renavam(renavamValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const pispasep: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.pispasep(v) ? null : { pispasep: true };\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { pispasep } from './validator';\r\n\r\nconst PISPASE_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => PispasepValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[pispasep][formControlName],[pispasep][formControl],[pispasep][ngModel]',\r\n  providers: [PISPASE_VALIDATOR]\r\n})\r\nexport class PispasepValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return pispasep(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'pispasep',\r\n})\r\nexport class PispasepPipe implements PipeTransform {\r\n    transform(pispasepValue: any) {\r\n        return maskBr.pispasep(pispasepValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const rg: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.rg(v) ? null : {rg: true};\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\nimport { rg } from './validator';\r\n\r\nconst RG_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => RGValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[rg][formControlName],[rg][formControl],[rg][ngModel]',\r\n  providers: [RG_VALIDATOR]\r\n})\r\nexport class RGValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return rg(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'rg',\r\n})\r\nexport class RGPipe implements PipeTransform {\r\n    transform(rgValue: any) {\r\n      return maskBr.rg(rgValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const time: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\r\n  if (utilsBr.isPresent(Validators.required(control))) {\r\n    return null;\r\n  }\r\n\r\n  const v: string = control.value;\r\n  return validateBr.time(v) ? null : {time: true};\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\nimport { time } from './validator';\r\n\r\nconst TIME_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // tslint:disable-next-line: no-use-before-declare\r\n  useExisting: forwardRef(() => TIMEValidator),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: '[time][formControlName],[time][formControl],[time][ngModel]',\r\n  providers: [TIME_VALIDATOR]\r\n})\r\nexport class TIMEValidator implements Validator {\r\n  validate(c: AbstractControl): {[key: string]: any} {\r\n    return time(c);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n    name: 'time',\r\n})\r\nexport class TIMEPipe implements PipeTransform {\r\n    transform(timeValue: any) {\r\n        return maskBr.time(timeValue);\r\n    }\r\n}\r\n","import { AbstractControl, Validators, ValidatorFn, RequiredValidator } from '@angular/forms';\r\nimport { utilsBr, validateBr } from 'js-brasil';\r\n\r\nexport const titulo: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\r\n    if (utilsBr.isPresent(Validators.required(control))) {\r\n        return null;\r\n    }\r\n\r\n    const v: string = control.value;\r\n    return validateBr.titulo(v) ? null : {titulo: true};\r\n}\r\n","import { Directive, forwardRef} from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\nimport { titulo } from './validator';\r\n\r\nconst TITULO_VALIDATOR: any = {\r\n    provide: NG_VALIDATORS,\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    useExisting: forwardRef(() => TITULOValidator),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    // tslint:disable-next-line:directive-selector\r\n    selector: '[titulo][formControlName],[titulo][formControl],[titulo][ngModel]',\r\n    providers: [TITULO_VALIDATOR]\r\n})\r\nexport class TITULOValidator implements Validator {\r\n    validate(c: AbstractControl): {[key: string]: any} {\r\n        return titulo(c);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { maskBr } from 'js-brasil';\r\n\r\n@Pipe({\r\n  name: 'titulo'\r\n})\r\nexport class TITULOPipe implements PipeTransform {\r\n  transform(tituloValue: any) {\r\n    return maskBr.titulo(tituloValue);\r\n  }\r\n}\r\n","import {\r\n  Directive, ElementRef, forwardRef, Input, Inject, NgModule,\r\n  OnChanges, Optional, Provider, SimpleChanges, Injectable, RendererFactory2\r\n} from '@angular/core'\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms'\r\nimport { ÉµgetDOM as getDOM, BrowserModule } from '@angular/platform-browser'\r\nimport { createTextMaskInputElement } from 'text-mask-core/dist/textMaskCore'\r\n\r\nexport class TextMaskConfig {\r\n  mask: Array<string | RegExp> | ((raw: string) => Array<string | RegExp>) | false\r\n  guide?: boolean\r\n  placeholderChar?: string\r\n  pipe?: (conformedValue: string, config: TextMaskConfig) => false | string | object\r\n  keepCharPositions?: boolean\r\n  showMask?: boolean\r\n}\r\n\r\nexport const MASKEDINPUT_VALUE_ACCESSOR: Provider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => MaskedInputDirective),\r\n  multi: true\r\n}\r\n\r\n/**\r\n * We must check whether the agent is Android because composition events\r\n * behave differently between iOS and Android.\r\n */\r\nfunction _isAndroid(): boolean {\r\n  const userAgent = getDOM() ? getDOM().getUserAgent() : ''\r\n  return /android (\\d+)/.test(userAgent.toLowerCase())\r\n}\r\n\r\n@Injectable()\r\n@Directive({\r\n  host: {\r\n    '(input)': '_handleInput($event.target.value)',\r\n    '(blur)': 'onTouched()',\r\n    '(compositionstart)': '_compositionStart()',\r\n    '(compositionend)': '_compositionEnd($event.target.value)'\r\n  },\r\n  selector: '[textMask]',\r\n  exportAs: 'textMask',\r\n  providers: [MASKEDINPUT_VALUE_ACCESSOR]\r\n})\r\nexport class MaskedInputDirective implements ControlValueAccessor, OnChanges {\r\n  @Input('textMask') textMaskConfig: TextMaskConfig = {\r\n    mask: [],\r\n    guide: true,\r\n    placeholderChar: '_',\r\n    pipe: undefined,\r\n    keepCharPositions: false,\r\n  }\r\n\r\n  onChange = (_: any) => { }\r\n  onTouched = () => { }\r\n\r\n  private textMaskInputElement: any\r\n  private inputElement: HTMLInputElement\r\n  private _renderer: any;\r\n  /** Whether the user is creating a composition string (IME events). */\r\n  private _composing = false\r\n\r\n  constructor(\r\n    rendererFactory: RendererFactory2,\r\n    private _elementRef: ElementRef,\r\n    @Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean\r\n  ) {\r\n    this._renderer = rendererFactory.createRenderer(null, null);\r\n    if (this._compositionMode == null) {\r\n      this._compositionMode = !_isAndroid()\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this._setupMask(true)\r\n    if (this.textMaskInputElement !== undefined) {\r\n      this.textMaskInputElement.update(this.inputElement.value)\r\n    }\r\n  }\r\n\r\n  writeValue(value: any) {\r\n    this._setupMask()\r\n\r\n    // set the initial value for cases where the mask is disabled\r\n    const normalizedValue = value == null ? '' : value\r\n    this._renderer.setProperty(this.inputElement, 'value', normalizedValue)\r\n\r\n    if (this.textMaskInputElement !== undefined) {\r\n      this.textMaskInputElement.update(value)\r\n    }\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn }\r\n  registerOnTouched(fn: () => void): void { this.onTouched = fn }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled)\r\n  }\r\n\r\n\r\n  _handleInput(value) {\r\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\r\n      this._setupMask()\r\n\r\n      if (this.textMaskInputElement !== undefined) {\r\n        this.textMaskInputElement.update(value)\r\n\r\n        // get the updated value\r\n        value = this.inputElement.value\r\n        this.onChange(value)\r\n      }\r\n    }\r\n  }\r\n\r\n  _setupMask(create = false) {\r\n    if (!this.inputElement) {\r\n      if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\r\n        // `textMask` directive is used directly on an input element\r\n        this.inputElement = this._elementRef.nativeElement\r\n      } else {\r\n        // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\r\n        this.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0]\r\n      }\r\n    }\r\n\r\n    if (this.inputElement && create) {\r\n      this.textMaskInputElement = createTextMaskInputElement(\r\n        Object.assign({ inputElement: this.inputElement }, this.textMaskConfig)\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  _compositionStart(): void { this._composing = true }\r\n\r\n  _compositionEnd(value: any): void {\r\n    this._composing = false\r\n    this._compositionMode && this._handleInput(value)\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  declarations: [MaskedInputDirective],\r\n  exports: [MaskedInputDirective]\r\n})\r\nexport class TextMaskModule { }\r\n\r\nexport { conformToMask } from 'text-mask-core/dist/textMaskCore'","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { cpf } from './cpf/validator';\r\nimport { CPFValidator } from './cpf/directive';\r\nimport { CPFPipe } from './cpf/pipe';\r\n\r\nimport { cnpj } from './cnpj/validator';\r\nimport { CNPJValidator } from './cnpj/directive';\r\nimport { CNPJPipe } from './cnpj/pipe';\r\n\r\nimport { telefone } from './telefone/validator';\r\nimport { TelefoneValidator } from './telefone/directive';\r\nimport { TelefonePipe } from './telefone/pipe';\r\n\r\nimport { celular } from './celular/validator';\r\nimport { CelularValidator } from './celular/directive';\r\nimport { CelularPipe } from './celular/pipe';\r\n\r\nimport { inscricaoestadual } from './inscricaoestadual/validator';\r\nimport { InscricaoEstadualValidator } from './inscricaoestadual/directive';\r\nimport { InscricaoEstadualPipe } from './inscricaoestadual/pipe';\r\n\r\nimport { CEPValidator } from './cep/directive';\r\nimport { CEPPipe } from './cep/pipe';\r\nimport { cep } from './cep/validator';\r\n\r\n\r\nimport { currency } from './currency/validator';\r\nimport { CURRENCYValidator } from './currency/directive';\r\nimport { CURRENCYPipe } from './currency/pipe';\r\n\r\nimport { number } from './number/validator';\r\nimport { NUMBERValidator } from './number/directive';\r\nimport { NUMBERPipe } from './number/pipe';\r\n\r\n\r\n\r\nimport { placa } from './placa/validator';\r\nimport { PLACAValidator } from './placa/directive';\r\nimport { PLACAPipe } from './placa/pipe';\r\n\r\nimport { percentage } from './percentage/validator';\r\nimport { PERCENTAGEValidator } from './percentage/directive';\r\nimport { PERCENTAGEPipe } from './percentage/pipe';\r\n\r\nimport { renavam } from './renavam/validator';\r\nimport { RenavamValidator } from './renavam/directive';\r\nimport { RenavamPipe } from './renavam/pipe';\r\n\r\nimport { pispasep } from './pispasep/validator';\r\nimport { PispasepValidator } from './pispasep/directive';\r\nimport { PispasepPipe } from './pispasep/pipe';\r\n\r\nimport { rg } from './rg/validator';\r\nimport { RGValidator } from './rg/directive';\r\nimport { RGPipe } from './rg/pipe';\r\n\r\nimport { time } from './time/validator';\r\nimport { TIMEValidator } from './time/directive';\r\nimport { TIMEPipe } from './time/pipe';\r\n\r\nimport { titulo } from './titulo/validator';\r\nimport { TITULOValidator } from './titulo/directive';\r\nimport { TITULOPipe } from './titulo/pipe';\r\nimport { utilsBr } from 'js-brasil';\r\n\r\nimport { TextMaskModule } from './angular2TextMask';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nexport const TextMask = {\r\n  TextMaskModule\r\n};\r\n\r\nexport const NgBrazilValidators: any = {\r\n  cpf,\r\n  cnpj,\r\n  celular,\r\n  cep,\r\n  currency,\r\n  inscricaoestadual,\r\n  number,\r\n  pispasep,\r\n  placa,\r\n  percentage,\r\n  renavam,\r\n  rg,\r\n  telefone,\r\n  time,\r\n  titulo\r\n}\r\n\r\nexport const MASKS = utilsBr.MASKS;\r\nexport const CustomDirectives = [\r\n  CelularValidator,\r\n  CelularPipe,\r\n  CEPValidator,\r\n  CEPPipe,\r\n  CPFValidator,\r\n  CPFPipe,\r\n  CNPJValidator,\r\n  CNPJPipe,\r\n  CURRENCYValidator,\r\n  CURRENCYPipe,\r\n  InscricaoEstadualValidator,\r\n  InscricaoEstadualPipe,\r\n  NUMBERValidator,\r\n  NUMBERPipe,\r\n  PERCENTAGEValidator,\r\n  PERCENTAGEPipe,\r\n  PispasepValidator,\r\n  PispasepPipe,\r\n  PLACAValidator,\r\n  PLACAPipe,\r\n  RenavamValidator,\r\n  RenavamPipe,\r\n  RGValidator,\r\n  RGPipe,\r\n  TelefoneValidator,\r\n  TelefonePipe,\r\n  TIMEValidator,\r\n  TIMEPipe,\r\n  TITULOValidator,\r\n  TITULOPipe\r\n];\r\n\r\nexport const NgBrDirectives = {\r\n  CelularValidator,\r\n  CelularPipe,\r\n  CEPValidator,\r\n  CEPPipe,\r\n  CNPJValidator,\r\n  CNPJPipe,\r\n  CPFValidator,\r\n  CPFPipe,\r\n  CURRENCYValidator,\r\n  CURRENCYPipe,\r\n  InscricaoEstadualValidator,\r\n  InscricaoEstadualPipe,\r\n  NUMBERValidator,\r\n  NUMBERPipe,\r\n  PERCENTAGEValidator,\r\n  PERCENTAGEPipe,\r\n  PispasepValidator,\r\n  PispasepPipe,\r\n  PLACAValidator,\r\n  PLACAPipe,\r\n  RGValidator,\r\n  RGPipe,\r\n  RenavamValidator,\r\n  RenavamPipe,\r\n  TelefoneValidator,\r\n  TelefonePipe,\r\n  TIMEValidator,\r\n  TIMEPipe,\r\n  TITULOValidator,\r\n  TITULOPipe\r\n};\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    CustomDirectives\r\n  ],\r\n  exports: [\r\n    CustomDirectives\r\n  ]\r\n})\r\nclass NgBrazil {\r\n  public static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgBrazil\r\n    };\r\n  }\r\n}\r\nexport {\r\n  NgBrazil\r\n}\r\n"]}